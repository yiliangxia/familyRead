<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.familyRead.dao.FileInfoMapper" >
  <resultMap id="BaseResultMap" type="com.familyRead.model.FileInfo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="file_name" property="fileName" jdbcType="VARCHAR" />
    <result column="file_path" property="filePath" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="file_type" property="fileType" jdbcType="INTEGER" />
    <result column="group_name" property="groupName" jdbcType="VARCHAR" />
    <result column="book_name" property="bookName" jdbcType="VARCHAR" />
    <result column="group_id" property="groupId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, file_name, file_path, update_time, create_by, update_by, create_time, file_type
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from file_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from file_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.familyRead.model.FileInfo" >
    insert into file_info (id, file_name, file_path, 
      update_time, create_by, update_by, 
      create_time, file_type)
    values (#{id,jdbcType=BIGINT}, #{fileName,jdbcType=VARCHAR}, #{filePath,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=VARCHAR}, #{updateBy,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{fileType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.familyRead.model.FileInfo" >
    insert into file_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="fileName != null" >
        file_name,
      </if>
      <if test="filePath != null" >
        file_path,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="fileType != null" >
        file_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="fileName != null" >
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="filePath != null" >
        #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fileType != null" >
        #{fileType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.familyRead.model.FileInfo" >
    update file_info
    <set >
      <if test="fileName != null" >
        file_name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="filePath != null" >
        file_path = #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fileType != null" >
        file_type = #{fileType,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.familyRead.model.FileInfo" >
    update file_info
    set file_name = #{fileName,jdbcType=VARCHAR},
      file_path = #{filePath,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=VARCHAR},
      update_by = #{updateBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      file_type = #{fileType,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectFileInfoPage" resultMap="BaseResultMap">
  	select distinct i.id,i.file_name,i.file_path,i.update_time,i.create_by,i.update_by,i.create_time,i.file_type,
  	p.group_name,p.group_id,p.book_name from file_info i
  	left join picture_book p on p.file_img_id = i.id 
  	<where>
  		<if test="parameter.fileType!=null">
  			and i.file_type = #{parameter.fileType}
  		</if>
  	</where>
  		order by i.create_time desc
  		LIMIT #{pageSize,jdbcType=DECIMAL} offset
		#{offset,jdbcType=DECIMAL}
  </select>
  <select id="selectPdfFileInfoPage" resultMap="BaseResultMap">
  	select distinct i.id,i.file_name,i.file_path,i.update_time,i.create_by,i.update_by,i.create_time,i.file_type,
  	p.group_name,p.group_id,p.book_name from file_info i
  	left join picture_book p on p.file_pdf_id = i.id 
  	<where>
  		<if test="parameter.fileType!=null">
  			and i.file_type = #{parameter.fileType}
  		</if>
  	</where>
  		order by i.create_time desc
  		LIMIT #{pageSize,jdbcType=DECIMAL} offset
		#{offset,jdbcType=DECIMAL}
  </select>
  <select id="selectVedioFileInfoPage" resultMap="BaseResultMap">
  	select distinct i.id,i.file_name,i.file_path,i.update_time,i.create_by,i.update_by,i.create_time,i.file_type,
  	p.group_name,p.group_id,p.book_name from file_info i
  	left join picture_book p on p.file_mp3_id = i.id 
  	<where>
  		<if test="parameter.fileType!=null">
  			and i.file_type = #{parameter.fileType}
  		</if>
  	</where>
  		order by i.create_time desc
  		LIMIT #{pageSize,jdbcType=DECIMAL} offset
		#{offset,jdbcType=DECIMAL}
  </select>
  <select id="selectFileInfoCount" resultType="java.lang.Integer">
  		select count(i.id) from file_info i 
  		left join picture_book p on p.file_img_id = i.id
  	<where>
  		<if test="parameter.fileType!=null">
  			and i.file_type = #{parameter.fileType}
  		</if>
  	</where>
  </select>
  
  <select id="selectFileInfoByParams" resultMap="BaseResultMap" parameterType="com.familyRead.model.FileInfo">
    select 
    <include refid="Base_Column_List" />
    from file_info
    <where>
    	<if test="fileName != null" >
       and file_name = #{fileName,jdbcType=VARCHAR}
      </if>
      <if test="filePath != null" >
       and file_path = #{filePath,jdbcType=VARCHAR}
      </if>
      <if test="updateTime != null" >
       and update_time = #{updateTime,jdbcType=TIMESTAMP}
      </if>
      <if test="createBy != null" >
       and create_by = #{createBy,jdbcType=VARCHAR}
      </if>
      <if test="updateBy != null" >
       and update_by = #{updateBy,jdbcType=VARCHAR}
      </if>
      <if test="createTime != null" >
       and create_time = #{createTime,jdbcType=TIMESTAMP}
      </if>
      <if test="fileType != null" >
       and file_type = #{fileType,jdbcType=INTEGER}
      </if>
    </where>
  </select>
</mapper>